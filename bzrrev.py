#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
from subprocess import Popen, PIPE
import sys
import shlex



################### bzrRev: uses bzr branch (if exists) information to 
# determine a unique revision number
def bzrRev():
    version_info = {}
    if os.path.exists(".git"):
       print "generating gitrev.h"
       
       #os.system("bzr version-info --python> version.py")
       #subprocess.check_output(["git" "show -s --format='%%h %%ci' HEAD]")
       os.system("git show -s --format='%h %ci' HEAD > version.tmp")
       version_info['revision_id'] = open('version.tmp').read().strip()

    else:
       print "WARNING: it seems that you don't have a git directory. While the library will compile correcly, informations about the current ptools version will be missing. Please use git to download PTools and get reliable versioning informations."
       version_info['revision_id'] = "Unknown version. Please use git to download PTools and get reliable versioning informations"
       
    from string import Template
       
    file = open("headers/gitrev.h","w")
       
    template=Template("""/* This file was generated by the "bzrRev" function
 * in SConstruct      
 * You should not modify it manually, as it may be re-generated.

 */

#ifndef GITREV_H
#define GITREV_H

#define GIT_REVID   "$revision_id"


#endif /* GITREV_H */


""")
    file.write(template.substitute(version_info))
    


bzrRev()