
declaration_code(""" 
#include <boost/python/suite/indexing/indexing_suite.hpp> 
#include <boost/python/suite/indexing/vector_indexing_suite.hpp>
""")


module_code(""" class_< Vdouble >("std_vector_double") 
        .def(vector_indexing_suite<std::vector<double> >());
""")

#Vdouble=Class("Vdouble","basetypes.h")

coord=Class("PTools::Coord3D", "coord3d.h")
set_policy(coord.Normalize, return_internal_reference())
Function("PTools::Norm","coord3d.h")
Function("PTools::Norm2","coord3d.h")
Function("PTools::PrintCoord","coord3d.h")


Atom=Class("PTools::Atom", "atom.h")
Function("PTools::Dist","atom.h")
Function("PTools::Dist2","atom.h")
Rigid=Class("PTools::Rigidbody", "rigidbody.h")
set_policy(Rigid.GetAtom, return_internal_reference())
Function("PTools::ReadPDB", "pdbio.h")
Function("PTools::WritePDB", "pdbio.h")
Function("PTools::ABrotate", "geometry.h")
Function("PTools::Translate", "geometry.h")

AtomSelection=Class ("PTools::AtomSelection", "atomselection.h")

ForceField = Class("PTools::ForceField", "forcefield.h")
ForceFieldAttract = Class("PTools::AttractForceField","forcefield.h")
TestForceField = Class("PTools::TestForceField","forcefield.h")

LBFGS = Class("PTools::Lbfgs", "minimizers/lbfgs_interface.h")
