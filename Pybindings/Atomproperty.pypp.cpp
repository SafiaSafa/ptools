// This file has been generated by Py++.

#include "boost/python.hpp"
#include "ptools.h"
#include "Atomproperty.pypp.hpp"

namespace bp = boost::python;

void register_Atomproperty_class(){

    bp::class_< PTools::Atomproperty >( "Atomproperty" )    
        .def( bp::init< >() )    
        .def( 
            "GetAtomCharge"
            , &::PTools::Atomproperty::GetAtomCharge )    
        .def( 
            "GetAtomId"
            , &::PTools::Atomproperty::GetAtomId )    
        .def( 
            "GetChainId"
            , &::PTools::Atomproperty::GetChainId )    
        .def( 
            "GetExtra"
            , &::PTools::Atomproperty::GetExtra )    
        .def( 
            "GetResidId"
            , &::PTools::Atomproperty::GetResidId )    
        .def( 
            "GetResidType"
            , &::PTools::Atomproperty::GetResidType )    
        .def( 
            "GetType"
            , &::PTools::Atomproperty::GetType )    
        .def( 
            "SetAtomCharge"
            , &::PTools::Atomproperty::SetAtomCharge
            , ( bp::arg("ch") ) )    
        .def( 
            "SetAtomId"
            , &::PTools::Atomproperty::SetAtomId
            , ( bp::arg("atomnumber") ) )    
        .def( 
            "SetChainId"
            , &::PTools::Atomproperty::SetChainId
            , ( bp::arg("chainid") ) )    
        .def( 
            "SetExtra"
            , &::PTools::Atomproperty::SetExtra
            , ( bp::arg("extra") ) )    
        .def( 
            "SetResidId"
            , &::PTools::Atomproperty::SetResidId
            , ( bp::arg("id") ) )    
        .def( 
            "SetResidType"
            , &::PTools::Atomproperty::SetResidType
            , ( bp::arg("residtype") ) )    
        .def( 
            "SetType"
            , &::PTools::Atomproperty::SetType
            , ( bp::arg("newtype") ) );

}
