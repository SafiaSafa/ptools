// This file has been generated by Py++.

#include "Rigidbody.pypp.hpp"
#include "boost/python.hpp"
#include "/ibpc/rhea/saladin/Src/ptools/trunk/ptools.h"

namespace bp = boost::python;

void register_Rigidbody_class(){

    { //::PTools::Rigidbody
        typedef bp::class_< PTools::Rigidbody > Rigidbody_exposer_t;
        Rigidbody_exposer_t Rigidbody_exposer = Rigidbody_exposer_t( "Rigidbody" );
        bp::scope Rigidbody_scope( Rigidbody_exposer );
        Rigidbody_exposer.def( bp::init< >() );
        Rigidbody_exposer.def( bp::init< std::string >(( bp::arg("filename") )) );
        Rigidbody_exposer.def( bp::init< PTools::Rigidbody const & >(( bp::arg("model") )) );
        { //::PTools::Rigidbody::ABrotate
        
            typedef void ( ::PTools::Rigidbody::*ABrotate_function_type )( ::PTools::Coord3D const &,::PTools::Coord3D const &,double ) ;
            
            Rigidbody_exposer.def( 
                "ABrotate"
                , ABrotate_function_type( &::PTools::Rigidbody::ABrotate )
                , ( bp::arg("A"), bp::arg("B"), bp::arg("theta") ) );
        
        }
        { //::PTools::Rigidbody::AddAtom
        
            typedef void ( ::PTools::Rigidbody::*AddAtom_function_type )( ::PTools::Atomproperty const &,::PTools::Coord3D ) ;
            
            Rigidbody_exposer.def( 
                "AddAtom"
                , AddAtom_function_type( &::PTools::Rigidbody::AddAtom )
                , ( bp::arg("at"), bp::arg("co") ) );
        
        }
        { //::PTools::Rigidbody::AddAtom
        
            typedef void ( ::PTools::Rigidbody::*AddAtom_function_type )( ::PTools::Atom const & ) ;
            
            Rigidbody_exposer.def( 
                "AddAtom"
                , AddAtom_function_type( &::PTools::Rigidbody::AddAtom )
                , ( bp::arg("at") ) );
        
        }
        { //::PTools::Rigidbody::CA
        
            typedef ::PTools::AtomSelection ( ::PTools::Rigidbody::*CA_function_type )(  ) ;
            
            Rigidbody_exposer.def( 
                "CA"
                , CA_function_type( &::PTools::Rigidbody::CA ) );
        
        }
        { //::PTools::Rigidbody::CopyAtom
        
            typedef ::PTools::Atom ( ::PTools::Rigidbody::*CopyAtom_function_type )( ::uint ) const;
            
            Rigidbody_exposer.def( 
                "CopyAtom"
                , CopyAtom_function_type( &::PTools::Rigidbody::CopyAtom )
                , ( bp::arg("i") ) );
        
        }
        { //::PTools::Rigidbody::FindCenter
        
            typedef ::PTools::Coord3D ( ::PTools::Rigidbody::*FindCenter_function_type )(  ) const;
            
            Rigidbody_exposer.def( 
                "FindCenter"
                , FindCenter_function_type( &::PTools::Rigidbody::FindCenter ) );
        
        }
        { //::PTools::Rigidbody::GetAtom
        
            typedef ::PTools::Atom & ( ::PTools::Rigidbody::*GetAtom_function_type )( ::uint ) ;
            
            Rigidbody_exposer.def( 
                "GetAtom"
                , GetAtom_function_type( &::PTools::Rigidbody::GetAtom )
                , ( bp::arg("pos") )
                , bp::return_internal_reference< 1 >() );
        
        }
        { //::PTools::Rigidbody::GetCoords
        
            typedef ::PTools::Coord3D ( ::PTools::Rigidbody::*GetCoords_function_type )( ::uint ) const;
            
            Rigidbody_exposer.def( 
                "GetCoords"
                , GetCoords_function_type( &::PTools::Rigidbody::GetCoords )
                , ( bp::arg("i") ) );
        
        }
        { //::PTools::Rigidbody::GetMatrix
        
            typedef ::Vdouble ( ::PTools::Rigidbody::*GetMatrix_function_type )(  ) const;
            
            Rigidbody_exposer.def( 
                "GetMatrix"
                , GetMatrix_function_type( &::PTools::Rigidbody::GetMatrix ) );
        
        }
        { //::PTools::Rigidbody::PrintMatrix
        
            typedef void ( ::PTools::Rigidbody::*PrintMatrix_function_type )(  ) const;
            
            Rigidbody_exposer.def( 
                "PrintMatrix"
                , PrintMatrix_function_type( &::PTools::Rigidbody::PrintMatrix ) );
        
        }
        { //::PTools::Rigidbody::ResetMatrix
        
            typedef void ( ::PTools::Rigidbody::*ResetMatrix_function_type )(  ) ;
            
            Rigidbody_exposer.def( 
                "ResetMatrix"
                , ResetMatrix_function_type( &::PTools::Rigidbody::ResetMatrix ) );
        
        }
        { //::PTools::Rigidbody::SelectAllAtoms
        
            typedef ::PTools::AtomSelection ( ::PTools::Rigidbody::*SelectAllAtoms_function_type )( ::PTools::Rigidbody & ) ;
            
            Rigidbody_exposer.def( 
                "SelectAllAtoms"
                , SelectAllAtoms_function_type( &::PTools::Rigidbody::SelectAllAtoms )
                , ( bp::arg("rigid") ) );
        
        }
        { //::PTools::Rigidbody::SelectAtomType
        
            typedef ::PTools::AtomSelection ( ::PTools::Rigidbody::*SelectAtomType_function_type )( ::std::string ) ;
            
            Rigidbody_exposer.def( 
                "SelectAtomType"
                , SelectAtomType_function_type( &::PTools::Rigidbody::SelectAtomType )
                , ( bp::arg("atomtype") ) );
        
        }
        { //::PTools::Rigidbody::SelectChainId
        
            typedef ::PTools::AtomSelection ( ::PTools::Rigidbody::*SelectChainId_function_type )( ::std::string ) ;
            
            Rigidbody_exposer.def( 
                "SelectChainId"
                , SelectChainId_function_type( &::PTools::Rigidbody::SelectChainId )
                , ( bp::arg("chainid") ) );
        
        }
        { //::PTools::Rigidbody::SelectResRange
        
            typedef ::PTools::AtomSelection ( ::PTools::Rigidbody::*SelectResRange_function_type )( ::uint,::uint ) ;
            
            Rigidbody_exposer.def( 
                "SelectResRange"
                , SelectResRange_function_type( &::PTools::Rigidbody::SelectResRange )
                , ( bp::arg("start"), bp::arg("stop") ) );
        
        }
        { //::PTools::Rigidbody::SelectResidType
        
            typedef ::PTools::AtomSelection ( ::PTools::Rigidbody::*SelectResidType_function_type )( ::std::string ) ;
            
            Rigidbody_exposer.def( 
                "SelectResidType"
                , SelectResidType_function_type( &::PTools::Rigidbody::SelectResidType )
                , ( bp::arg("residtype") ) );
        
        }
        { //::PTools::Rigidbody::SetCoords
        
            typedef void ( ::PTools::Rigidbody::*SetCoords_function_type )( ::uint,::PTools::Coord3D & ) ;
            
            Rigidbody_exposer.def( 
                "SetCoords"
                , SetCoords_function_type( &::PTools::Rigidbody::SetCoords )
                , ( bp::arg("i"), bp::arg("co") ) );
        
        }
        { //::PTools::Rigidbody::Size
        
            typedef ::uint ( ::PTools::Rigidbody::*Size_function_type )(  ) const;
            
            Rigidbody_exposer.def( 
                "Size"
                , Size_function_type( &::PTools::Rigidbody::Size ) );
        
        }
        { //::PTools::Rigidbody::Translate
        
            typedef void ( ::PTools::Rigidbody::*Translate_function_type )( ::PTools::Coord3D const & ) ;
            
            Rigidbody_exposer.def( 
                "Translate"
                , Translate_function_type( &::PTools::Rigidbody::Translate )
                , ( bp::arg("tr") ) );
        
        }
        Rigidbody_exposer.def( bp::self + bp::self );
        { //::PTools::Rigidbody::operator=
        
            typedef ::PTools::Rigidbody & ( ::PTools::Rigidbody::*assign_function_type )( ::PTools::Rigidbody const & ) ;
            
            Rigidbody_exposer.def( 
                "assign"
                , assign_function_type( &::PTools::Rigidbody::operator= )
                , ( bp::arg("rig") )
                , bp::return_self< >() );
        
        }
        { //::PTools::Rigidbody::operator[]
        
            typedef ::PTools::Atom & ( ::PTools::Rigidbody::*__getitem___function_type )( ::uint ) ;
            
            Rigidbody_exposer.def( 
                "__getitem__"
                , __getitem___function_type( &::PTools::Rigidbody::operator[] )
                , ( bp::arg("pos") )
                , bp::return_internal_reference< 1 >() );
        
        }
    }

}
